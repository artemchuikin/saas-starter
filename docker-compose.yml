version: "3.3"
services:
    frontend:
        env_file: ./frontend/.env.local
        container_name: frontend
        build:
            context: ./frontend
        command: npm run start
        depends_on:
            - api
        networks:
            - app-network
    api:
        env_file: ./backend/.env.production
        container_name: api
        build:
            context: ./backend
        command: npm run start
        restart: unless-stopped
        volumes:
            - ./backend/:/usr/src/app
            - ./backend/node_modules:/usr/src/app/node_modules
        depends_on:
            - redis
            - db
        networks:
            - app-network
    db:
        env_file: ./backend/.env.production
        container_name: db
        image: postgres:15-alpine
        restart: always
        ports:
            - "5432:5432"
        networks:
            - app-network
    redis:
        env_file: ./backend/.env.production
        container_name: redis
        image: redis:6.2.11-alpine
        restart: always
        ports:
            - "6379:6379"
        networks:
            - app-network
        volumes:
            - redis:/data
    nginx:
        env_file: ./.env
        container_name: nginx
        image: nginx
        restart: always
        volumes:
            - ./nginx/:/etc/nginx/templates
            - ./ssl/${SSL_NAME}.crt:/etc/ssl/${SSL_NAME}.crt
            - ./ssl/${SSL_NAME}.key:/etc/ssl/${SSL_NAME}.key
        ports:
            - "80:80"
            - "443:443"
        depends_on:
            - frontend
            - api
        networks:
            - app-network
volumes:
    redis:
        driver: local
networks:
    app-network: